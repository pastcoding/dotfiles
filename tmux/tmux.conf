set-option -g default-terminal 'xterm-256color'
set-option -g terminal-overrides ',xterm-256color:TC'
# enable image preview with YAZI
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# reloading tmux conf
unbind r
bind r source-file $HOME/.config/tmux/tmux.conf \; display "Reloaded tmux conf"

# Basic setup
set -g prefix C-a
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 50            # zero-out escape time delay
set -g history-limit 1000000     # increase history size (from 2,000)
set -g set-clipboard on          # use system clipboard
set -g default-terminal "${TERM}"
set-window-option -g mode-keys vi
set -g mouse on

# Status bar customization
set -g status-interval 10         # update the status bar every 10 seconds
set -g status-position top       # macOS / darwin style
set -g status-justify centre
set -g status-left-length 200     # increase length (from 10)
set -g status-style 'bg=default'  # transparent background

# STATUS BAR STYLE 1 - PLAIN
# set -g status-left "  #S |"
set -g status-left " #S "
set -g status-right "#{?window_zoomed_flag, ,} %H:%M"
set -g window-status-current-format '#I 󰆥 #W'
set -g window-status-format '#[fg=#3f3f3f]#I #W'
set -g pane-border-style 'fg=#3f3f3f'
# set -g pane-active-border-style 'fg=#ffffff'
set -g message-command-style 'bg=default,fg=#ffffff'
set -g message-style 'bg=default,fg=#fcd703'
set -g mode-style 'bg=default,fg=#fcd703'

# copy paste
unbind -T copy-mode-vi Space
unbind -T copy-mode-vi Enter
unbind -T prefix c
bind -T prefix c copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"

# window splitting
unbind v
unbind h
unbind %
unbind '"'
bind v split-window -v -c "#{pane_current_path}"
bind h split-window -h -c "#{pane_current_path}"

# pane + window navigation
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R
unbind C-h
unbind C-j
unbind C-k
unbind C-l
unbind C-p
unbind C-n
bind -n C-p previous-window
bind -n C-n next-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
 
# Manage windows
unbind R
unbind w
unbind q 
unbind Q
bind R command-prompt "rename-window'%%'"
bind w new-window -c "#{pane_current_path}"
bind q kill-pane
bind Q kill-window
set -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on       # renumber all windows when any window is closed

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'omerxx/tmux-sessionx'

# session managment
#set -g @continuum-restore 'on'
set -g @resurrect-dir '~/.config/tmux/resurrect'
set -g @resurrect-strategy-nvim 'session'
set -g @sessionx-bind 'o'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
